#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ –≤ Telegram
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ GitHub Actions
"""

import os
import json
import requests
from datetime import datetime
import logging
import glob

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def send_to_telegram(text, bot_token, channel_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    
    data = {
        "chat_id": channel_id,
        "text": text,
        "parse_mode": "Markdown"
    }
    
    try:
        response = requests.post(url, json=data, timeout=30)
        if response.status_code == 200:
            logger.info("‚úÖ –ê–Ω–∞–ª–∏–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram")
            return True
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

def format_analysis_message(analysis_data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–Ω–∞–ª–∏–∑–æ–º"""
    try:
        message = "üéØ **TrueLiveBet - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞!**\n\n"
        
        # –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞
        timestamp = datetime.now().strftime("%H:%M:%S")
        message += f"‚è∞ **–í—Ä–µ–º—è:** {timestamp} (–ú–°–ö)\n\n"
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        if 'total_matches' in analysis_data:
            message += f"üìä **–í—Å–µ–≥–æ –º–∞—Ç—á–µ–π:** {analysis_data['total_matches']}\n"
        
        if 'sports_analyzed' in analysis_data:
            sports = analysis_data['sports_analyzed']
            if isinstance(sports, list):
                message += f"üèÜ **–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞:** {', '.join(sports)}\n"
            else:
                message += f"üèÜ **–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞:** {sports}\n"
        
        # –õ—É—á—à–∏–µ —Å—Ç–∞–≤–∫–∏
        if 'best_bets' in analysis_data and analysis_data['best_bets']:
            message += "\n‚≠ê **–õ—É—á—à–∏–µ —Å—Ç–∞–≤–∫–∏:**\n"
            for i, bet in enumerate(analysis_data['best_bets'][:5], 1):
                if isinstance(bet, dict):
                    description = bet.get('description', str(bet))
                    confidence = bet.get('confidence', '')
                    
                    message += f"{i}. {description}\n"
                    if confidence:
                        message += f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence}%\n"
                else:
                    message += f"{i}. {bet}\n"
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        message += "\n" + "‚îÄ" * 40
        
        return message
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return "üéØ **TrueLiveBet - –ù–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω!**\n\n–ê–Ω–∞–ª–∏–∑ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ."

def check_new_recommendations():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
    try:
        recommendations_dir = "recommendations"
        pattern = f"{recommendations_dir}/recommendation_*.json"
        
        new_recommendations = []
        
        for filename in glob.glob(pattern):
            try:
                with open(filename, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
                if data.get('status') == 'new':
                    new_recommendations.append((filename, data))
                    
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {filename}: {e}")
        
        return new_recommendations
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {e}")
        return []

def format_recommendation_message(recommendation_data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π"""
    try:
        message = "üéØ **TrueLiveBet - –ù–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è!**\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞
        timestamp = recommendation_data.get('timestamp', '')
        if timestamp:
            try:
                dt = datetime.fromisoformat(timestamp)
                moscow_time = dt.strftime("%H:%M:%S")
                message += f"‚è∞ **–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞:** {moscow_time} (–ú–°–ö)\n\n"
            except:
                message += f"‚è∞ **–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞:** {timestamp}\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        text = recommendation_data.get('text', '')
        if text:
            message += text
        else:
            message += "–ù–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        message += "\n\n" + "‚îÄ" * 40
        
        return message
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {e}")
        return "üéØ **TrueLiveBet - –ù–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è!**\n\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ."

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ –≤ Telegram...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
    bot_token = os.environ.get('BOT_TOKEN')
    channel_id = os.environ.get('CHANNEL_ID')
    
    if not bot_token or not channel_id:
        logger.error("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ–∫–µ–Ω—ã Telegram")
        return
    
    logger.info(f"üì± –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∫–∞–Ω–∞–ª–∞: {channel_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    new_recommendations = check_new_recommendations()
    
    if new_recommendations:
        logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(new_recommendations)} –Ω–æ–≤—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
        for filename, data in new_recommendations:
            try:
                logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ {data.get('id', 'unknown')}")
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                message = format_recommendation_message(data)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
                if send_to_telegram(message, bot_token, channel_id):
                    logger.info(f"‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è {data.get('id', 'unknown')} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                    data['status'] = 'sent'
                    data['sent_at'] = datetime.now().isoformat()
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                    with open(filename, 'w', encoding='utf-8') as f:
                        json.dump(data, f, ensure_ascii=False, indent=2)
                    
                else:
                    logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é {data.get('id', 'unknown')}")
                    
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑
    try:
        analysis_file = 'recommendations/live_analysis_test.json'
        
        if os.path.exists(analysis_file):
            with open(analysis_file, 'r', encoding='utf-8') as f:
                analysis_data = json.load(f)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = format_analysis_message(analysis_data)
            logger.info(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–Ω–∞–ª–∏–∑–æ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ, –¥–ª–∏–Ω–∞: {len(message)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            if send_to_telegram(message, bot_token, channel_id):
                logger.info("‚úÖ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram")
            else:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏–∑")
        else:
            logger.info("üì≠ –§–∞–π–ª –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–Ω–∞–ª–∏–∑–∞: {e}")
    
    logger.info("üéØ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()
