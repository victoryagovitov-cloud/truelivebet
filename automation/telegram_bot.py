#!/usr/bin/env python3
"""
TrueLiveBet - Telegram –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏–∑–æ–≤
–ê–≤—Ç–æ—Ä: –í–∏–∫—Ç–æ—Ä
"""

import asyncio
import json
from datetime import datetime
from typing import List, Dict, Optional
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
from loguru import logger
from ai_analyzer import AnalysisResult

class TrueLiveBetBot:
    """Telegram –±–æ—Ç –¥–ª—è TrueLiveBet"""
    
    def __init__(self, token: str):
        self.token = token
        self.application = Application.builder().token(token).build()
        self.setup_handlers()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
        self.stats = {
            'users': set(),
            'analyses_sent': 0,
            'start_time': datetime.now()
        }
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("stats", self.stats_command))
        self.application.add_handler(CommandHandler("about", self.about_command))
        
        # –ö–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏–∑–∞
        self.application.add_handler(CommandHandler("analyze", self.analyze_command))
        self.application.add_handler(CommandHandler("live", self.live_command))
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
        self.application.add_handler(CallbackQueryHandler(self.button_callback))
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        user = update.effective_user
        self.stats['users'].add(user.id)
        
        welcome_text = f"""
üéØ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TrueLiveBet!**

–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø - –≤–∞—à AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ª–∞–π–≤-—Å—Ç–∞–≤–æ–∫.

üèÜ **–ß—Ç–æ —è —É–º–µ—é:**
‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å live –º–∞—Ç—á–∏ —Å BetBoom
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É TrueLiveBet
‚Ä¢ –î–∞–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏

üöÄ **–ö–æ–º–∞–Ω–¥—ã:**
/analyze - –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Ç—á–∞
/live - –¢–µ–∫—É—â–∏–µ live –º–∞—Ç—á–∏
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
/about - –û –ø—Ä–æ–µ–∫—Ç–µ

üí° **–ù–∞—à–∞ –º–∏—Å—Å–∏—è:** –ß–µ—Å—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±–µ–∑ –≤–∏–ª–æ–∫ –∏ –¥–æ–≥–æ–≤–æ—Ä–Ω—è–∫–æ–≤!

–ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /live –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ–∫—É—â–∏—Ö –º–∞—Ç—á–µ–π.
        """
        
        keyboard = [
            [InlineKeyboardButton("üìä Live –º–∞—Ç—á–∏", callback_data="live_matches")],
            [InlineKeyboardButton("üéØ –ê–Ω–∞–ª–∏–∑", callback_data="analyze")],
            [InlineKeyboardButton("üìö –ü–æ–º–æ—â—å", callback_data="help")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(welcome_text, reply_markup=reply_markup, parse_mode='Markdown')
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /help"""
        help_text = """
üìö **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º TrueLiveBet:**

üéØ **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/about - –û –ø—Ä–æ–µ–∫—Ç–µ TrueLiveBet

üìä **–ê–Ω–∞–ª–∏–∑ –º–∞—Ç—á–µ–π:**
/analyze - –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Ç—á–∞
/live - –ü—Ä–æ—Å–º–æ—Ç—Ä live –º–∞—Ç—á–µ–π
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞

üí° **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /live –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ–∫—É—â–∏—Ö –º–∞—Ç—á–µ–π
2. –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –º–∞—Ç—á
3. –ü–æ–ª—É—á–∏—Ç–µ AI-–∞–Ω–∞–ª–∏–∑ –ø–æ –Ω–∞—à–∏–º –ø—Ä–∞–≤–∏–ª–∞–º
4. –ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è

üèÜ **–ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞:**
‚Ä¢ –°—Ç—Ä–æ–≥–∏–π –∞–Ω–∞–ª–∏–∑ (üíÄüéØ‚≠êüëç)
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ –ß–µ—Å—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
‚Ä¢ –ë–µ–∑ –≤–∏–ª–æ–∫ –∏ –¥–æ–≥–æ–≤–æ—Ä–Ω—è–∫–æ–≤

‚ùì **–í–æ–ø—Ä–æ—Å—ã?** –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @victor_yagovitov
        """
        
        await update.message.reply_text(help_text, parse_mode='Markdown')
    
    async def about_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /about"""
        about_text = """
üèÜ **TrueLiveBet - –ß–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –ª–∞–π–≤-—Å—Ç–∞–≤–æ–∫**

üéØ **–ù–∞—à–∞ –º–∏—Å—Å–∏—è:**
–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤–æ–∫—Ä—É–≥ —á–µ—Å—Ç–Ω–æ–≥–æ –±–µ—Ç—Ç–∏–Ω–≥–∞, –≥–¥–µ –∫–∞–∂–¥—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.

‚úÖ **–ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:**
‚Ä¢ –°—Ç—Ä–æ–≥–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ —Å–∏—Å—Ç–µ–º–µ
‚Ä¢ –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é ~80%
‚Ä¢ –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (scores24.live, 4Score.ru, Transfermarkt)
‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –±–∞–Ω–∫—Ä–æ–ª–ª-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç
‚Ä¢ –°–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤

üö´ **–ß—Ç–æ –º—ã –ù–ï –¥–µ–ª–∞–µ–º:**
‚Ä¢ –í–∏–ª–∫–∏ –∏ –¥–æ–≥–æ–≤–æ—Ä–Ω—è–∫–∏
‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –±—É–¥—É—â–µ–µ
‚Ä¢ –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ/—Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è

üèà **–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞:**
‚öΩ –§—É—Ç–±–æ–ª, üéæ –¢–µ–Ω–Ω–∏—Å, üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª, ü§æ –ì–∞–Ω–¥–±–æ–ª, üèì –ù–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å

üë®‚Äçüíª **–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** –í–∏–∫—Ç–æ—Ä –Ø–≥–æ–≤–∏—Ç–æ–≤
üåê **GitHub:** https://github.com/victoryagovitov-cloud/truelivebet

üí° **–ü—Ä–∏–Ω—Ü–∏–ø:** –ö–∞—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–∞ –≤–∞–∂–Ω–µ–µ –±—ã—Å—Ç—Ä–æ–π –ø—Ä–∏–±—ã–ª–∏!
        """
        
        await update.message.reply_text(about_text, parse_mode='Markdown')
    
    async def stats_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /stats"""
        uptime = datetime.now() - self.stats['start_time']
        hours = int(uptime.total_seconds() // 3600)
        minutes = int((uptime.total_seconds() % 3600) // 60)
        
        stats_text = f"""
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ TrueLiveBet Bot:**

üë• **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** {len(self.stats['users'])}
üìà **–ê–Ω–∞–ª–∏–∑–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:** {self.stats['analyses_sent']}
‚è± **–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:** {hours}—á {minutes}–º
üïê **–ó–∞–ø—É—â–µ–Ω:** {self.stats['start_time'].strftime('%d.%m.%Y %H:%M')}

üéØ **–°—Ç–∞—Ç—É—Å:** –ê–∫—Ç–∏–≤–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!
        """
        
        await update.message.reply_text(stats_text, parse_mode='Markdown')
    
    async def live_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /live - –ø–æ–∫–∞–∑–∞—Ç—å live –º–∞—Ç—á–∏"""
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å BetBoom —Å–∫—Ä–∞–ø–µ—Ä–æ–º
        live_text = """
üìä **Live –º–∞—Ç—á–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...)**

üîÑ **–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ —Å BetBoom...**
‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...

üí° **–ü–æ–∫–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /analyze –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–∞—Ç—á–µ–π.**
        """
        
        keyboard = [
            [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh_live")],
            [InlineKeyboardButton("üéØ –ê–Ω–∞–ª–∏–∑", callback_data="analyze")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(live_text, reply_markup=reply_markup, parse_mode='Markdown')
    
    async def analyze_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /analyze - –∞–Ω–∞–ª–∏–∑ –º–∞—Ç—á–∞"""
        analyze_text = """
üéØ **–ê–Ω–∞–ª–∏–∑ –º–∞—Ç—á–∞ TrueLiveBet**

üìù **–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:**
```
–°–ø–æ—Ä—Ç: –§—É—Ç–±–æ–ª
–ö–æ–º–∞–Ω–¥–∞ 1: –ë–∞—Ä—Å–µ–ª–æ–Ω–∞
–ö–æ–º–∞–Ω–¥–∞ 2: –†–µ–∞–ª –ú–∞–¥—Ä–∏–¥
–°—á–µ—Ç: 2:0
–í—Ä–µ–º—è: 75'
```

üí° **–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –≤—ã–±–æ—Ä–∞:**
        """
        
        keyboard = [
            [InlineKeyboardButton("‚öΩ –§—É—Ç–±–æ–ª", callback_data="sport_football")],
            [InlineKeyboardButton("üéæ –¢–µ–Ω–Ω–∏—Å", callback_data="sport_tennis")],
            [InlineKeyboardButton("üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª", callback_data="sport_basketball")],
            [InlineKeyboardButton("ü§æ –ì–∞–Ω–¥–±–æ–ª", callback_data="sport_handball")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(analyze_text, reply_markup=reply_markup, parse_mode='Markdown')
    
    async def button_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
        query = update.callback_query
        await query.answer()
        
        if query.data == "live_matches":
            await self.live_command(update, context)
        elif query.data == "analyze":
            await self.analyze_command(update, context)
        elif query.data == "help":
            await self.help_command(update, context)
        elif query.data == "refresh_live":
            await query.edit_message_text("üîÑ –û–±–Ω–æ–≤–ª—è—é live –º–∞—Ç—á–∏...")
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        elif query.data.startswith("sport_"):
            sport = query.data.replace("sport_", "")
            await self.handle_sport_selection(query, sport)
    
    async def handle_sport_selection(self, query, sport: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤–∏–¥–∞ —Å–ø–æ—Ä—Ç–∞"""
        sport_names = {
            "football": "‚öΩ –§—É—Ç–±–æ–ª",
            "tennis": "üéæ –¢–µ–Ω–Ω–∏—Å", 
            "basketball": "üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª",
            "handball": "ü§æ –ì–∞–Ω–¥–±–æ–ª"
        }
        
        sport_name = sport_names.get(sport, sport)
        
        text = f"""
{sport_name} - –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:

üéØ **–ê–Ω–∞–ª–∏–∑ live –º–∞—Ç—á–∞**
üìä **–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏**
üìà **–ò—Å—Ç–æ—Ä–∏—è –≤—Å—Ç—Ä–µ—á**
        """
        
        keyboard = [
            [InlineKeyboardButton("üéØ Live –∞–Ω–∞–ª–∏–∑", callback_data=f"analyze_{sport}")],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"stats_{sport}")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="analyze")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(text, reply_markup=reply_markup, parse_mode='Markdown')
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        text = update.message.text
        
        # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞
        if "–∞–Ω–∞–ª–∏–∑" in text.lower() or "–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π" in text.lower():
            await update.message.reply_text("üéØ –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–∞—Ç—á–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /analyze")
        elif "–ø–æ–º–æ—â—å" in text.lower() or "help" in text.lower():
            await self.help_command(update, context)
        else:
            await update.message.reply_text("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏")
    
    async def send_analysis(self, chat_id: int, analysis: AnalysisResult):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞"""
        try:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –Ω–∞—à–∏–º —à–∞–±–ª–æ–Ω–∞–º
            message = self._format_analysis_message(analysis)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await self.application.bot.send_message(
                chat_id=chat_id,
                text=message,
                parse_mode='Markdown'
            )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            self.stats['analyses_sent'] += 1
            
            logger.info(f"–ê–Ω–∞–ª–∏–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {chat_id}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏–∑–∞: {e}")
    
    def _format_analysis_message(self, analysis: AnalysisResult) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ –Ω–∞—à–∏–º —à–∞–±–ª–æ–Ω–∞–º"""
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        category_emoji = analysis.category
        category_name = {
            "üíÄ": "–ú–ï–†–¢–í–´–ï (>95%)",
            "üéØ": "–ò–î–ï–ê–õ–¨–ù–´–ï (85-95%)", 
            "‚≠ê": "–û–¢–õ–ò–ß–ù–´–ï (80-85%)",
            "üëç": "–•–û–†–û–®–ò–ï (75-80%)"
        }.get(analysis.category, "–ê–ù–ê–õ–ò–ó")
        
        message = f"""
{category_emoji} **{category_name}**

üéØ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** {analysis.recommendation}
üìä **–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:** {analysis.confidence:.1f}%
‚ö†Ô∏è **–†–∏—Å–∫:** {analysis.risk_level}

üí° **–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:**
{analysis.reasoning}

‚è∞ **–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞:** {analysis.timestamp}
üèÜ **TrueLiveBet - —á–µ—Å—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑!**
        """
        
        return message
    
    async def start_bot(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        try:
            logger.info("–ó–∞–ø—É—Å–∫ TrueLiveBet Telegram –±–æ—Ç–∞...")
            await self.application.initialize()
            await self.application.start()
            await self.application.updater.start_polling()
            logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –î–µ—Ä–∂–∏–º –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã–º
            await self.application.updater.idle()
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
            raise
    
    async def stop_bot(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        try:
            await self.application.updater.stop()
            await self.application.stop()
            await self.application.shutdown()
            logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞: {e}")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
    TOKEN = "YOUR_TELEGRAM_BOT_TOKEN"
    
    bot = TrueLiveBetBot(TOKEN)
    
    try:
        await bot.start_bot()
    except KeyboardInterrupt:
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    finally:
        await bot.stop_bot()

if __name__ == "__main__":
    asyncio.run(main())
