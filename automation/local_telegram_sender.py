#!/usr/bin/env python3
"""
TrueLiveBet - –õ–æ–∫–∞–ª—å–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞–ø—Ä—è–º—É—é –≤ Telegram –±–µ–∑ GitHub Actions
"""

import json
import asyncio
import os
from datetime import datetime

class LocalTelegramSender:
    """–õ–æ–∫–∞–ª—å–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram"""
    
    def __init__(self, token: str, chat_id: str = None):
        self.token = token
        self.chat_id = chat_id or "@truelivebet"
        
    def send_recommendation(self, file_path: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞ (–∏–º–∏—Ç–∞—Ü–∏—è)"""
        try:
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message_text = data.get('text', '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')
            
            print("=" * 60)
            print("üì§ –û–¢–ü–†–ê–í–ö–ê –í TELEGRAM:")
            print(f"üí¨ –ß–∞—Ç: {self.chat_id}")
            print(f"üìÅ –§–∞–π–ª: {file_path}")
            print("=" * 60)
            print(message_text)
            print("=" * 60)
            
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Telegram API
            # await self.bot.send_message(chat_id=self.chat_id, text=message_text, parse_mode='Markdown')
            
            print(f"‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–∑ {file_path}")
            return True
            
        except FileNotFoundError:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
            return False
        except json.JSONDecodeError:
            print(f"‚ùå –û—à–∏–±–∫–∞ JSON –≤ —Ñ–∞–π–ª–µ: {file_path}")
            return False
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False
    
    def send_analysis(self, file_path: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –∏–∑ —Ñ–∞–π–ª–∞ (–∏–º–∏—Ç–∞—Ü–∏—è)"""
        try:
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∞–Ω–∞–ª–∏–∑–∞
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞
            total_matches = data.get('total_matches', 0)
            sports = data.get('sports_analyzed', [])
            best_bets = data.get('best_bets', [])
            
            message_text = f"""
üìä **–ê–ù–ê–õ–ò–ó –õ–ê–ô–í –ú–ê–¢–ß–ï–ô BETBOOM**

‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')} (–ú–°–ö)
üìà –í—Å–µ–≥–æ –º–∞—Ç—á–µ–π: {total_matches}
‚öΩ –í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞: {', '.join(sports)}

üèÜ **–õ—É—á—à–∏–µ —Å—Ç–∞–≤–∫–∏:**
"""
            
            for i, bet in enumerate(best_bets[:3], 1):
                description = bet.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
                confidence = bet.get('confidence', 0)
                message_text += f"{i}. {description} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence}%)\n"
            
            message_text += f"\nüéØ –ò—Å—Ç–æ—á–Ω–∏–∫: {data.get('source', 'Betboom')}"
            
            print("=" * 60)
            print("üì§ –û–¢–ü–†–ê–í–ö–ê –ê–ù–ê–õ–ò–ó–ê –í TELEGRAM:")
            print(f"üí¨ –ß–∞—Ç: {self.chat_id}")
            print(f"üìÅ –§–∞–π–ª: {file_path}")
            print("=" * 60)
            print(message_text)
            print("=" * 60)
            
            print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏–∑ {file_path}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏–∑–∞: {e}")
            return False
    
    def send_all_recommendations(self) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
        # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ recommendations
        current_dir = os.path.dirname(os.path.abspath(__file__))
        recommendations_dir = os.path.join(current_dir, "..", "recommendations")
        
        print(f"üîç –ò—â–µ–º —Ñ–∞–π–ª—ã –≤: {recommendations_dir}")
        
        if not os.path.exists(recommendations_dir):
            print(f"‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {recommendations_dir}")
            return False
        
        success_count = 0
        total_count = 0
        
        # –ò—â–µ–º —Ñ–∞–π–ª—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        for filename in os.listdir(recommendations_dir):
            if filename.startswith('recommendation_') and filename.endswith('.json'):
                file_path = os.path.join(recommendations_dir, filename)
                total_count += 1
                
                if self.send_recommendation(file_path):
                    success_count += 1
                
                # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                asyncio.sleep(1)
        
        # –ò—â–µ–º —Ñ–∞–π–ª—ã –∞–Ω–∞–ª–∏–∑–∞
        for filename in os.listdir(recommendations_dir):
            if filename.startswith('live_analysis_') and filename.endswith('.json'):
                file_path = os.path.join(recommendations_dir, filename)
                total_count += 1
                
                if self.send_analysis(file_path):
                    success_count += 1
                
                asyncio.sleep(1)
        
        print(f"üìä –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {success_count}/{total_count} —Ñ–∞–π–ª–æ–≤")
        return success_count > 0

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –¢–æ–∫–µ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    token = "7824400107:AAGZqPdS0E0N3HsYpD8TW9m8c-bapFd-RHk"
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å
    sender = LocalTelegramSender(token)
    
    print("üöÄ TrueLiveBet - –õ–æ–∫–∞–ª—å–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram")
    print("=" * 50)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    success = sender.send_all_recommendations()
    
    if success:
        print("‚úÖ –í—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º
    main()
