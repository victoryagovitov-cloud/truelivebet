#!/usr/bin/env python3
"""
TrueLiveBet - –†–µ–∞–ª—å–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø—Ä—è–º–æ –≤ Telegram —á–µ—Ä–µ–∑ API
"""

import json
import os
import asyncio
from datetime import datetime
import requests

class RealTelegramSender:
    """–†–µ–∞–ª—å–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram —á–µ—Ä–µ–∑ HTTP API"""
    
    def __init__(self, token: str, chat_id: str = "@truelivebet"):
        self.token = token
        self.chat_id = chat_id
        self.api_url = f"https://api.telegram.org/bot{token}"
        
    def send_message(self, text: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —á–µ—Ä–µ–∑ HTTP API"""
        try:
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            data = {
                'chat_id': self.chat_id,
                'text': text,
                'parse_mode': 'Markdown'
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ HTTP API
            response = requests.post(
                f"{self.api_url}/sendMessage",
                data=data,
                timeout=10
            )
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID: {result['result']['message_id']}")
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                    return False
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                return False
                
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
            return False
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False
    
    def send_recommendation(self, file_path: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message_text = data.get('text', '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')
            
            print("=" * 60)
            print("üì§ –û–¢–ü–†–ê–í–ö–ê –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –í TELEGRAM:")
            print(f"üí¨ –ß–∞—Ç: {self.chat_id}")
            print(f"üìÅ –§–∞–π–ª: {file_path}")
            print("=" * 60)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            success = self.send_message(message_text)
            
            if success:
                print("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
            
            return success
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
            return False
    
    def send_analysis(self, file_path: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∞–Ω–∞–ª–∏–∑–∞
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞
            total_matches = data.get('total_matches', 0)
            sports = data.get('sports_analyzed', [])
            best_bets = data.get('best_bets', [])
            
            message_text = f"""
üìä **–ê–ù–ê–õ–ò–ó –õ–ê–ô–í –ú–ê–¢–ß–ï–ô BETBOOM**

‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')} (–ú–°–ö)
üìà –í—Å–µ–≥–æ –º–∞—Ç—á–µ–π: {total_matches}
‚öΩ –í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞: {', '.join(sports)}

üèÜ **–õ—É—á—à–∏–µ —Å—Ç–∞–≤–∫–∏:**
"""
            
            for i, bet in enumerate(best_bets[:3], 1):
                description = bet.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
                confidence = bet.get('confidence', 0)
                message_text += f"{i}. {description} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence}%)\n"
            
            message_text += f"\nüéØ –ò—Å—Ç–æ—á–Ω–∏–∫: {data.get('source', 'Betboom')}"
            
            print("=" * 60)
            print("üì§ –û–¢–ü–†–ê–í–ö–ê –ê–ù–ê–õ–ò–ó–ê –í TELEGRAM:")
            print(f"üí¨ –ß–∞—Ç: {self.chat_id}")
            print(f"üìÅ –§–∞–π–ª: {file_path}")
            print("=" * 60)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            success = self.send_message(message_text)
            
            if success:
                print("‚úÖ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏–∑–∞")
            
            return success
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
            return False
    
    def send_all_recommendations(self) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
        # –ü–∞–ø–∫–∞ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
        recommendations_dir = "recommendations"
        
        if not os.path.exists(recommendations_dir):
            print(f"‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {recommendations_dir}")
            return False
        
        print(f"üîç –ò—â–µ–º —Ñ–∞–π–ª—ã –≤: {os.path.abspath(recommendations_dir)}")
        
        # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        files_to_send = []
        
        # –ò—â–µ–º —Ñ–∞–π–ª—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        for filename in os.listdir(recommendations_dir):
            if filename.startswith('recommendation_') and filename.endswith('.json'):
                files_to_send.append(('recommendation', os.path.join(recommendations_dir, filename)))
            elif filename.startswith('live_analysis_') and filename.endswith('.json'):
                files_to_send.append(('analysis', os.path.join(recommendations_dir, filename)))
        
        if not files_to_send:
            print("‚ùå –§–∞–π–ª—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
        
        print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files_to_send)}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
        success_count = 0
        total_count = len(files_to_send)
        
        for file_type, file_path in files_to_send:
            print(f"\nüì§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {file_path}")
            
            if file_type == 'recommendation':
                success = self.send_recommendation(file_path)
            else:
                success = self.send_analysis(file_path)
            
            if success:
                success_count += 1
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
            import time
            time.sleep(2)
        
        print(f"\nüéâ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {success_count}/{total_count} —Ñ–∞–π–ª–æ–≤")
        return success_count > 0

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –¢–æ–∫–µ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    token = "7824400107:AAGZqPdS0E0N3HsYpD8TW9m8c-bapFd-RHk"
    
    print("üöÄ TrueLiveBet - –†–ï–ê–õ–¨–ù–´–ô –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram")
    print("=" * 60)
    print(f"üîë –¢–æ–∫–µ–Ω: {token[:10]}...{token[-10:]}")
    print(f"üí¨ –ß–∞—Ç: @truelivebet")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å
    sender = RealTelegramSender(token)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    success = sender.send_all_recommendations()
    
    if success:
        print("\nüéâ –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram!")
        print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª @truelivebet")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π")
        print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º
    main()
