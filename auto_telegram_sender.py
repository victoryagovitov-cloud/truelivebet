#!/usr/bin/env python3
"""
TrueLiveBet - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram
–†–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–∞—Ç—á–∏
"""

import json
import os
import time
import schedule
from datetime import datetime
import urllib.request
import urllib.parse
import threading

class AutoTelegramSender:
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram"""
    
    def __init__(self, token: str, chat_id: str = "@truelivebet"):
        self.token = token
        self.chat_id = chat_id
        self.api_url = f"https://api.telegram.org/bot{token}"
        self.last_sent_files = set()  # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        self.is_running = False
        
    def send_message(self, text: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
        try:
            data = {
                'chat_id': self.chat_id,
                'text': text,
                'parse_mode': 'Markdown'
            }
            
            encoded_data = urllib.parse.urlencode(data).encode('utf-8')
            req = urllib.request.Request(
                f"{self.api_url}/sendMessage",
                data=encoded_data,
                headers={'Content-Type': 'application/x-www-form-urlencoded'}
            )
            
            with urllib.request.urlopen(req, timeout=10) as response:
                result = json.loads(response.read().decode('utf-8'))
                
                if result.get('ok'):
                    print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID: {result['result']['message_id']}")
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                    return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            return False
    
    def check_new_files(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö"""
        recommendations_dir = "recommendations"
        
        if not os.path.exists(recommendations_dir):
            return
        
        current_files = set()
        
        # –ò—â–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        for filename in os.listdir(recommendations_dir):
            if filename.endswith('.json'):
                file_path = os.path.join(recommendations_dir, filename)
                current_files.add(filename)
                
                # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–æ–≤—ã–π - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                if filename not in self.last_sent_files:
                    print(f"üÜï –ù–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª: {filename}")
                    self.send_file(file_path)
                    self.last_sent_files.add(filename)
        
        # –£–¥–∞–ª—è–µ–º –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        self.last_sent_files = self.last_sent_files.intersection(current_files)
    
    def send_file(self, file_path: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞"""
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            if 'text' in data:  # –§–∞–π–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                message_text = data.get('text', '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é: {os.path.basename(file_path)}")
            else:  # –§–∞–π–ª –∞–Ω–∞–ª–∏–∑–∞
                message_text = self.format_analysis_message(data)
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∞–Ω–∞–ª–∏–∑: {os.path.basename(file_path)}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            success = self.send_message(message_text)
            
            if success:
                print(f"‚úÖ –§–∞–π–ª {os.path.basename(file_path)} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ {os.path.basename(file_path)}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
    
    def format_analysis_message(self, data):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞"""
        total_matches = data.get('total_matches', 0)
        sports = data.get('sports_analyzed', [])
        best_bets = data.get('best_bets', [])
        
        message_text = f"""
üìä **–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –õ–ê–ô–í –ú–ê–¢–ß–ï–ô BETBOOM**

‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')} (–ú–°–ö)
üìà –í—Å–µ–≥–æ –º–∞—Ç—á–µ–π: {total_matches}
‚öΩ –í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞: {', '.join(sports)}

üèÜ **–õ—É—á—à–∏–µ —Å—Ç–∞–≤–∫–∏:**
"""
        
        for i, bet in enumerate(best_bets[:3], 1):
            description = bet.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
            confidence = bet.get('confidence', 0)
            message_text += f"{i}. {description} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence}%)\n"
        
        message_text += f"\nüéØ –ò—Å—Ç–æ—á–Ω–∏–∫: {data.get('source', 'Betboom')}"
        message_text += "\nü§ñ *–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏*"
        
        return message_text
    
    def send_daily_summary(self):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å–≤–æ–¥–∫—É"""
        message = f"""
üìÖ **–ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –°–í–û–î–ö–ê TRUELIVEBET**

‚è∞ –î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y')}
üïê –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')} (–ú–°–ö)

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å:**
‚Ä¢ –§–∞–π–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(self.last_sent_files)}
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {len([f for f in self.last_sent_files if 'recommendation' in f])}
‚Ä¢ –ê–Ω–∞–ª–∏–∑–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {len([f for f in self.last_sent_files if 'analysis' in f])}

üéØ **–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏**
ü§ñ TrueLiveBet Bot v2.0
        """
        
        print("üìÖ –û—Ç–ø—Ä–∞–≤–ª—è—é –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å–≤–æ–¥–∫—É...")
        self.send_message(message)
    
    def start_monitoring(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"""
        print("üöÄ TrueLiveBet - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∑–∞–ø—É—â–µ–Ω!")
        print("=" * 60)
        print(f"üí¨ –ö–∞–Ω–∞–ª: {self.chat_id}")
        print(f"‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%H:%M:%S')}")
        print("=" * 60)
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        schedule.every(5).minutes.do(self.check_new_files)  # –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        schedule.every().hour.do(self.send_daily_summary)    # –ö–∞–∂–¥—ã–π —á–∞—Å
        
        print("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç")
        print("   ‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞: –∫–∞–∂–¥—ã–π —á–∞—Å")
        print("=" * 60)
        
        self.is_running = True
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        while self.is_running:
            schedule.run_pending()
            time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    
    def stop_monitoring(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"""
        self.is_running = False
        print("‚èπÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    token = "7824400107:AAGZqPdS0E0N3HsYpD8TW9m8c-bapFd-RHk"
    
    # –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å
    sender = AutoTelegramSender(token)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        sender.start_monitoring()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        sender.stop_monitoring()
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")

if __name__ == "__main__":
    main()
