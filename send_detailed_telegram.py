#!/usr/bin/env python3
"""
TrueLiveBet - –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏ –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç–∞–≤–∫–µ
"""

import json
import os
import time
from datetime import datetime
import urllib.request
import urllib.parse

class DetailedTelegramSender:
    """–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram - –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑"""
    
    def __init__(self, token: str, chat_id: str = "@truelivebet"):
        self.token = token
        self.chat_id = chat_id
        self.api_url = f"https://api.telegram.org/bot{token}"
        
    def send_message(self, text: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
        try:
            data = {
                'chat_id': self.chat_id,
                'text': text,
                'parse_mode': 'Markdown'
            }
            
            encoded_data = urllib.parse.urlencode(data).encode('utf-8')
            req = urllib.request.Request(
                f"{self.api_url}/sendMessage",
                data=encoded_data,
                headers={'Content-Type': 'application/x-www-form-urlencoded'}
            )
            
            with urllib.request.urlopen(req, timeout=10) as response:
                result = json.loads(response.read().decode('utf-8'))
                
                if result.get('ok'):
                    print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID: {result['result']['message_id']}")
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                    return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            return False
    
    def format_detailed_message(self, data):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞"""
        total_matches = data.get('total_matches', 0)
        sports = data.get('sports_analyzed', [])
        best_bets = data.get('best_bets', [])
        
        message_text = f"""
üìä **TrueLiveBet - –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑**

‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')} (–ú–°–ö)
üìà –í—Å–µ–≥–æ –º–∞—Ç—á–µ–π: {total_matches}
‚öΩ –í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞: {', '.join(sports)}

üèÜ **–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç–∞–≤–æ–∫:**
"""
        
        for i, bet in enumerate(best_bets, 1):
            description = bet.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
            confidence = bet.get('confidence', 0)
            category = bet.get('category', 'üëç')
            reasoning = bet.get('reasoning', '–ù–µ—Ç –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏—è')
            recommendation = bet.get('recommendation', '–ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')
            status = bet.get('status', 'UNKNOWN')
            
            message_text += f"""
**{i}. {category} {description}**
üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence}%
üéØ –°—Ç–∞—Ç—É—Å: {status}
üí° –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {reasoning}
‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {recommendation}
---
"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤
        risk_assessment = data.get('risk_assessment', {})
        overall_risk = risk_assessment.get('overall_risk', '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')
        
        message_text += f"""
‚ö†Ô∏è **–ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤:**
–û–±—â–∏–π —Ä–∏—Å–∫: {overall_risk.upper()}

üèÜ **TrueLiveBet - —á–µ—Å—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑!**
        """
        
        return message_text
    
    def send_detailed_analysis(self):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑"""
        print("üîç –ò—â–µ–º —Ñ–∞–π–ª –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...")
        
        # –ò—â–µ–º —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π —Ñ–∞–π–ª
        recommendations_dir = "recommendations"
        if not os.path.exists(recommendations_dir):
            print("‚ùå –ü–∞–ø–∫–∞ recommendations –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        analysis_files = []
        for filename in os.listdir(recommendations_dir):
            if filename.startswith('live_analysis_') and filename.endswith('.json') and not filename.endswith('_text.json'):
                file_path = os.path.join(recommendations_dir, filename)
                mtime = os.path.getmtime(file_path)
                analysis_files.append((file_path, mtime, filename))
        
        if not analysis_files:
            print("‚ùå –§–∞–π–ª—ã –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Å–∞–º—ã–π —Å–≤–µ–∂–∏–π –ø–µ—Ä–≤—ã–π)
        analysis_files.sort(key=lambda x: x[1], reverse=True)
        fresh_file = analysis_files[0][0]
        
        print(f"üìÅ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {os.path.basename(fresh_file)}")
        
        try:
            with open(fresh_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            message_text = self.format_detailed_message(data)
            
            print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤ Telegram...")
            print("=" * 60)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            success = self.send_message(message_text)
            
            if success:
                print("‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")
                return True
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
            return False

def main():
    print("üöÄ TrueLiveBet - –î–ï–¢–ê–õ–¨–ù–´–ô –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ Telegram")
    print("=" * 60)
    
    # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
    TOKEN = "7824400107:AAGZqPdS0E0N3HsYpD8TW9m8c-bapFd-RHk"
    
    print(f"üîë –¢–æ–∫–µ–Ω: {TOKEN[:10]}...{TOKEN[-10:]}")
    print(f"üí¨ –ß–∞—Ç: @truelivebet")
    print(f"üìä –û—Ç–ø—Ä–∞–≤–∫–∞: –î–ï–¢–ê–õ–¨–ù–´–ô –∞–Ω–∞–ª–∏–∑ —Å–æ –≤—Å–µ–º–∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏")
    print("=" * 60)
    
    sender = DetailedTelegramSender(TOKEN)
    success = sender.send_detailed_analysis()
    
    if success:
        print("\nüéâ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")
        print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª @truelivebet")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑")

if __name__ == "__main__":
    main()
