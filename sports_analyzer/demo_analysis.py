#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å Claude AI
"""

import asyncio
import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import SportsAnalyzer


async def demo_single_analysis():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∞–Ω–∞–ª–∏–∑–∞"""
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø TRUELIVEBET SPORTS ANALYZER")
    print("=" * 50)
    print()
    
    analyzer = SportsAnalyzer()
    
    print("üîÑ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ—Ö –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞...")
    print("   (–≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö)")
    print()
    
    # –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
    results = await analyzer.run_analysis_cycle()
    
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:")
    print("=" * 30)
    
    total_recommendations = 0
    for sport, recommendations in results.items():
        sport_names = {
            'football': '‚öΩ –§—É—Ç–±–æ–ª',
            'tennis': 'üéæ –¢–µ–Ω–Ω–∏—Å', 
            'table_tennis': 'üèì –ù–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å',
            'handball': 'ü§æ –ì–∞–Ω–¥–±–æ–ª'
        }
        
        print(f"{sport_names.get(sport, sport)}: {len(recommendations)} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
        total_recommendations += len(recommendations)
    
    print(f"\nüìà –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ: {total_recommendations} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
    print()
    
    if total_recommendations > 0:
        print("‚úÖ –û—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")
    else:
        print("üì≠ –ü–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–∞—Ç—á–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç")
    
    print()
    print("üîÆ –í–û–ó–ú–û–ñ–ù–û–°–¢–ò CLAUDE AI:")
    print("   ‚Ä¢ –ü–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–∞—Ç—á–∞")
    print("   ‚Ä¢ –£—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã") 
    print("   ‚Ä¢ –ê–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —Å–∏—Ç—É–∞—Ü–∏—è–º")
    print("   ‚Ä¢ –î–∞–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏—è")
    print()
    print("üöÄ –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    print("   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Claude API –∫–ª—é—á")
    print("   2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Browser MCP")
    print("   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python start_analyzer.py --mode schedule")


if __name__ == "__main__":
    asyncio.run(demo_single_analysis())