#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Claude –∞–Ω–∞–ª–∏–∑–∞
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.advanced_claude_analyzer import AdvancedClaudeAnalyzer


async def test_football_analysis():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–≥–æ –º–∞—Ç—á–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–≥–æ –º–∞—Ç—á–∞...")
    
    analyzer = AdvancedClaudeAnalyzer()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    betboom_data = {
        "team1": "–ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏",
        "team2": "–õ–∏–≤–µ—Ä–ø—É–ª—å",
        "score": "2:1", 
        "minute": 67,
        "league": "–ü—Ä–µ–º—å–µ—Ä-–ª–∏–≥–∞",
        "odds": {"1": 1.85, "X": 3.20, "2": 4.50}
    }
    
    scores24_data = {
        "league_position1": 2,
        "league_position2": 3,
        "form1": "WWWDW",
        "form2": "WDWLW",
        "recent_goals1": 12,
        "recent_goals2": 8,
        "league_level": "top"
    }
    
    result = await analyzer.analyze_football_match(betboom_data, scores24_data)
    
    print("‚öΩ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ñ—É—Ç–±–æ–ª–∞:")
    print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result.get('confidence')}%")
    print(f"   –§–∞–≤–æ—Ä–∏—Ç –≤–µ–¥–µ—Ç: {result.get('is_favorite_leading')}")
    print(f"   –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {result.get('reasoning')}")
    print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {result.get('recommendation')}")
    print()


async def test_tennis_analysis():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–Ω–Ω–∏—Å–Ω–æ–≥–æ –º–∞—Ç—á–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —Ç–µ–Ω–Ω–∏—Å–Ω–æ–≥–æ –º–∞—Ç—á–∞...")
    
    analyzer = AdvancedClaudeAnalyzer()
    
    betboom_data = {
        "player1": "–ù–æ–≤–∞–∫ –î–∂–æ–∫–æ–≤–∏—á",
        "player2": "–†–∞—Ñ–∞—ç–ª—å –ù–∞–¥–∞–ª—å",
        "sets_score": "1-0",
        "games_score": "6-4, 3-1",
        "tournament": "Australian Open",
        "odds": {"1": 1.65, "2": 2.20}
    }
    
    scores24_data = {
        "ranking1": 1,
        "ranking2": 2,
        "form1": "WWWLW",
        "form2": "WLWWL", 
        "head_to_head": "15-10",
        "surface_preference1": "hard",
        "surface_preference2": "clay"
    }
    
    result = await analyzer.analyze_tennis_match(betboom_data, scores24_data)
    
    print("üéæ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–Ω–Ω–∏—Å–∞:")
    print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result.get('confidence')}%")
    print(f"   –§–∞–≤–æ—Ä–∏—Ç –≤–µ–¥–µ—Ç: {result.get('is_favorite_leading')}")
    print(f"   –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {result.get('reasoning')}")
    print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {result.get('recommendation')}")
    print()


async def test_handball_total_analysis():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ—Ç–∞–ª–∞ –≤ –≥–∞–Ω–¥–±–æ–ª–µ"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —Ç–æ—Ç–∞–ª–∞ –≤ –≥–∞–Ω–¥–±–æ–ª–µ...")
    
    analyzer = AdvancedClaudeAnalyzer()
    
    betboom_data = {
        "team1": "–ë–∞—Ä—Å–µ–ª–æ–Ω–∞",
        "team2": "–ö–∏–ª—å",
        "score": "25:23",
        "minute": 40,
        "half": 2,
        "analysis_type": "total",
        "total_goals": 48,
        "minutes_played": 40,
        "predicted_total": 72
    }
    
    scores24_data = {
        "avg_goals_per_match1": 32.5,
        "avg_goals_per_match2": 28.3,
        "form1": "WWWDW",
        "form2": "WDLWW"
    }
    
    result = await analyzer.analyze_handball_with_context(betboom_data, scores24_data)
    
    print("ü§æ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≥–∞–Ω–¥–±–æ–ª—å–Ω–æ–≥–æ —Ç–æ—Ç–∞–ª–∞:")
    print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result.get('confidence')}%")
    print(f"   –¢–µ–º–ø –∏–≥—Ä—ã: {result.get('pace')}")
    print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {result.get('recommendation')}")
    print(f"   –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {result.get('reasoning')}")
    print()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Claude –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...\n")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        await asyncio.gather(
            test_football_analysis(),
            test_tennis_analysis(), 
            test_handball_total_analysis()
        )
        
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ Claude API:")
        print("   1. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ console.anthropic.com")
        print("   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: export CLAUDE_API_KEY='your-key'")
        print("   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")


if __name__ == "__main__":
    asyncio.run(main())